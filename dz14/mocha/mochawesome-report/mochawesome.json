{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2025-04-23T14:21:20.173Z",
    "end": "2025-04-23T14:21:20.265Z",
    "duration": 92,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d91fea54-c8c8-4485-82ad-b25c838cce70",
      "title": "",
      "fullFile": "C:\\Users\\sofka\\alldz\\dz14\\mocha\\test\\mocha-tests.spec.ts",
      "file": "\\test\\mocha-tests.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "078e97a9-3b68-488f-a0c9-a379e9b7146a",
          "title": "Jokes API tests",
          "fullFile": "C:\\Users\\sofka\\alldz\\dz14\\mocha\\test\\mocha-tests.spec.ts",
          "file": "\\test\\mocha-tests.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Jokes API tests\"",
              "fullTitle": "Jokes API tests \"before all\" hook in \"Jokes API tests\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiWorld=new import_api_world.ApiWorld;jokesApi=apiWorld.jokesApi",
              "err": {},
              "uuid": "c66cbf4c-ef76-4606-9b25-9bc63933a613",
              "parentUUID": "078e97a9-3b68-488f-a0c9-a379e9b7146a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return joke types",
              "fullTitle": "Jokes API tests Should return joke types",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const[response,types]=await jokesApi.getJokeTypes();(0,import_chai.expect)(response.status).to.equal(200);(0,import_chai.expect)(types).to.be.an(\"array\")",
              "err": {},
              "uuid": "65ce55da-0159-46c2-a647-9502d997ff38",
              "parentUUID": "078e97a9-3b68-488f-a0c9-a379e9b7146a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "bf1aa2f7-0e21-4b70-9ffb-cf9169c473f6",
              "title": "General Jokes",
              "fullFile": "C:\\Users\\sofka\\alldz\\dz14\\mocha\\test\\mocha-tests.spec.ts",
              "file": "\\test\\mocha-tests.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should return a random joke",
                  "fullTitle": "Jokes API tests General Jokes Should return a random joke",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const[response,joke]=await jokesApi.getRandomJoke();(0,import_chai.expect)(response.status).to.equal(200);(0,import_chai.expect)(joke).to.have.property(\"setup\");(0,import_chai.expect)(joke).to.have.property(\"punchline\")",
                  "err": {},
                  "uuid": "cdfd563a-e352-44a5-8cb3-95698355f285",
                  "parentUUID": "bf1aa2f7-0e21-4b70-9ffb-cf9169c473f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should return 10 random jokes",
                  "fullTitle": "Jokes API tests General Jokes Should return 10 random jokes",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const[response,jokes]=await jokesApi.getTenRandomJokes();(0,import_chai.expect)(response.status).to.equal(200);(0,import_chai.expect)(jokes).to.be.an(\"array\").that.has.lengthOf(10)",
                  "err": {},
                  "uuid": "13226c26-fe74-4b42-98a0-084ce0be8da7",
                  "parentUUID": "bf1aa2f7-0e21-4b70-9ffb-cf9169c473f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should return a joke by ID",
                  "fullTitle": "Jokes API tests General Jokes Should return a joke by ID",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const randomJokeId=Math.floor(Math.random()*100)+1;const[response,joke]=await jokesApi.getJokeById(randomJokeId);(0,import_chai.expect)(response.status).to.equal(200);(0,import_chai.expect)(joke).to.have.all.keys(\"id\",\"type\",\"setup\",\"punchline\");context.jokeId=joke.id",
                  "err": {},
                  "uuid": "22c48c4c-5bf4-443d-aa4b-467cb80869ea",
                  "parentUUID": "bf1aa2f7-0e21-4b70-9ffb-cf9169c473f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cdfd563a-e352-44a5-8cb3-95698355f285",
                "13226c26-fe74-4b42-98a0-084ce0be8da7",
                "22c48c4c-5bf4-443d-aa4b-467cb80869ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0160438f-e869-41f2-9722-792e3ab33dfb",
              "title": "Programming Jokes",
              "fullFile": "C:\\Users\\sofka\\alldz\\dz14\\mocha\\test\\mocha-tests.spec.ts",
              "file": "\\test\\mocha-tests.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should return a random programming joke",
                  "fullTitle": "Jokes API tests Programming Jokes Should return a random programming joke",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const[response,jokes]=await jokesApi.getRandomProgrammingJoke();(0,import_chai.expect)(response.status).to.equal(200);if(Array.isArray(jokes)){jokes.forEach(joke=>(0,import_chai.expect)(joke.type).to.equal(\"programming\"))}else{(0,import_chai.expect)(jokes.type).to.equal(\"programming\")}",
                  "err": {},
                  "uuid": "bfdab604-63e2-472e-9f5f-58e259e3e3a1",
                  "parentUUID": "0160438f-e869-41f2-9722-792e3ab33dfb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should return 10 random programming jokes",
                  "fullTitle": "Jokes API tests Programming Jokes Should return 10 random programming jokes",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const[response,jokes]=await jokesApi.getTenRandomProgrammingJokes();(0,import_chai.expect)(response.status).to.equal(200);(0,import_chai.expect)(jokes).to.be.an(\"array\");jokes.forEach(joke=>(0,import_chai.expect)(joke.type).to.equal(\"programming\"))",
                  "err": {},
                  "uuid": "13402b6e-e4e3-4c02-8c9a-edd428487a44",
                  "parentUUID": "0160438f-e869-41f2-9722-792e3ab33dfb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bfdab604-63e2-472e-9f5f-58e259e3e3a1",
                "13402b6e-e4e3-4c02-8c9a-edd428487a44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "65ce55da-0159-46c2-a647-9502d997ff38"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "[object Object]": true
      },
      "version": "6.2.0"
    }
  }
}